name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  # Deterministic build settings for releases
  SOURCE_DATE_EPOCH: 1734307200
  TZ: UTC
  LC_ALL: C
  LANG: C
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.caching=true"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-release-${{ runner.os }}-
            gradle-${{ runner.os }}-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.6'
          bundler-cache: true
          working-directory: .

      - name: Setup Ruby PATH
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Install Fastlane dependencies
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle install

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Run tests before release
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle exec fastlane android test

      - name: Run lint checks before release
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle exec fastlane android lint

      - name: Build unsigned release APK (F-Droid)
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle exec fastlane android release

      - name: Decode keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > release-keystore.jks
          echo "‚úì Keystore decoded"

      - name: Build signed release APK (for users)
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          # Create signing.properties from secrets
          cat > signing.properties << EOF
          KEYSTORE_FILE=$PWD/release-keystore.jks
          KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD
          KEY_ALIAS=$KEY_ALIAS
          KEY_PASSWORD=$KEY_PASSWORD
          EOF
          bundle exec fastlane android signed_release

      - name: Build debug APK for testing
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle exec fastlane android debug

      - name: Verify reproducible build
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle exec fastlane android verify_reproducible

      - name: Prepare F-Droid metadata
        run: |
          export PATH="$HOME/.rvm/gems/ruby-3.3.6/bin:$HOME/.rvm/rubies/ruby-3.3.6/bin:$PATH"
          bundle exec fastlane android prepare_fdroid_metadata

      - name: Generate release checksums
        run: |
          cd app/build/outputs/apk/
          echo "=== Signed Release APK ===" > checksums.txt
          if [ -f release/app-release.apk ]; then
            cd release
            sha256sum app-release.apk >> ../checksums.txt
            cd ..
          fi
          echo "" >> checksums.txt
          echo "=== Unsigned Release APK (F-Droid) ===" >> checksums.txt
          if [ -f release/app-release-unsigned.apk ]; then
            cd release
            sha256sum app-release-unsigned.apk >> ../checksums.txt
            cd ..
          fi
          echo "" >> checksums.txt
          echo "=== Debug APK ===" >> checksums.txt
          if [ -d debug ]; then
            cd debug
            sha256sum *.apk >> ../checksums.txt
            cd ..
          fi
          cat checksums.txt

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: DarklakeWallet ${{ steps.version.outputs.version }}
          body: |
            ## DarklakeWallet ${{ steps.version.outputs.version }}

            ### üì± Downloads

            #### For Users:
            - **`app-release.apk`** - Signed release APK (recommended for most users)
              - ‚úÖ Production-ready, signed release build
              - ‚úÖ Can be installed directly on any Android device
              - ‚úÖ Optimized and minified

            - **`app-debug.apk`** - Debug APK for development testing
              - ‚úÖ Includes debugging features
              - ‚úÖ Automatically signed with debug certificate
              - ‚ö†Ô∏è Larger file size, not optimized

            #### For F-Droid:
            - **`app-release-unsigned.apk`** - Unsigned APK for F-Droid repository inclusion
              - ‚ö†Ô∏è Cannot be installed directly (needs signing)
              - ‚úÖ Ready for F-Droid's reproducible build process

            #### Verification:
            - **`checksums.txt`** - SHA256 checksums for all APKs

            ### üì• Installation Instructions

            **For most users:**
            1. Download `app-release.apk` (recommended)
            2. Enable "Install from Unknown Sources" in Android settings
            3. Open the downloaded APK to install

            ### üîí Security
            This release is built reproducibly. You can verify the build by:
            1. Checking out this exact commit
            2. Building with the same environment settings
            3. Comparing checksums

            ### üß™ Quality Assurance
            ‚úÖ All unit tests passed
            ‚úÖ All lint checks passed
            ‚úÖ Reproducible build verified

            ---

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.version.outputs.version }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}

      - name: Upload signed release APK (for users)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload debug APK to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload unsigned APK to release (for F-Droid)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: app-release-unsigned.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload checksums to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain

      - name: Upload F-Droid metadata
        uses: actions/upload-artifact@v4
        with:
          name: fdroid-metadata-${{ steps.version.outputs.version }}
          path: metadata/
          retention-days: 365

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ steps.version.outputs.version }}
          path: |
            app/build/outputs/apk/release/
            build-info.json
            verification-builds/
          retention-days: 365
